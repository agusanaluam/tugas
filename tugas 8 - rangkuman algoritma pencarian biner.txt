				Algoritma Pencarian Bagi Dua (Binary Search)

1.Algoritma Pencarian
	Dalam ilmu komputer, sebuah algoritma pencarian dijelaskan secara luas adalah sebuah algoritma yang menerima masukan berupa sebuah masalah dan menghasilkan sebuah solusi untuk masalah tersebut, yang biasanya didapat dari evaluasi beberapa kemungkinan solusi. Sebagian besar algoritma yang dipelajari oleh ilmuwan komputer adalah algoritma pencarian. Himpunan semua kemungkinan solusi dari sebuah masalah disebut ruang pencarian. Algortima pencarian brute-force atau pencarian naif/uninformed menggunakan metode yang sederhana dan sangat intuitif pada ruang pencarian, sedangkan algoritma pencarian informed menggunakan heuristik untuk menerapkan pengetahuan tentang struktur dari ruang pencarian untuk berusaha mengurangi banyaknya waktu yang dipakai dalam pencarian. Searching adalah mencari data yang dibutuhkan. Searching dalam pemrograman bisa dilakukan untuk mencari data yang ada di dalam memory komputer.Dalam kehidupan sehari-hari kita juga sering melakukan kegiatan searching seperti mencari data/informasi yang ada dalam internet.

2.Pengertian Pencarian Bagi Dua (Binary Search)
	Pencarian Bagi Dua (Binary Search) adalah metode dari pencarian yang menggunakan konsep membagi 2 jumlah elemen larik atau array yang telah ditentukan. Syarat utama dalam Pencarian Bagi Dua (Binary Search) ialah sekumpulan data atau algoritma yang ingin dicari nanti sudah terurut, baik secara menaik atau menurun. Algoritma Pencarian dengan metode Binary Search juga lebih memudahkan pencarian karena dengan membagi proses pencarian.
Kelebihan menggunakan konsep Pencarian Bagi Dua (Binary Search) dalam pencarian data yaitu waktu yang sangat cepat dalam pencarian dan proses yang lebih cepat. Algoritma Pencarian Binary Search membuat data pada array dibagi menjadi 2 ruang pencarian. Pemproses akan mencari data yang sesuai pada bagian pertama dan akan berpindah pada bagian selanjutnya jika data tidak ditemukan pada bagian pertama.

3.Tujuan Pencarian Bagi Dua (Binary Search)
	Pencarian Bagi Dua (Binary Search) dilakukan untuk :
	a.memperkecil jumlah operasi pembandingan yang harus dilakukan antara data yang dicari dengan data yang ada di dalam tabel, khususnya untuk jumlah data yang sangat besar ukurannya.
	b.Prinsip dasarnya adalah melakukan proses pembagian ruang pencarian secara berulang-ulang sampai data ditemukan atau sampai ruang pencarian tidak dapat dibagi lagi (berarti ada kemungkinan data tidak ditemukan).
	c.Syarat utama untuk pencarian Bagi Dua adalah data di dalam tabel harus sudah terurut, misalkan terurut menaik.

4.Proses Yang Terjadi Pada Algoritma Pencarian Bagi Dua (Binary Search)
	Proses yang terjadi pada pencarian dengan metode ini adalah sebagai berikut :
	a.Membaca Array data
	b.Apabila Array belum terurut maka array diurutkan terlebih dahulu.
	c.Menentukan data yang akan dicari
	d.Menentukan elemen tengah dari array
	e.Jika nilai elemen tengah sama dengan data yang dicari, maka pencarian berhenti.
	f.Jika elemen tengah tidak sama dengan data yang dicari maka :
		a)Jika nilai elemen tengah > data yang dicari maka pencarian dilakukan pada setengah array pertama.
		b)Jika nilai elemen tengah lebih kecil dari pada data yang dicari maka pencarian dilakukan pada setengah array berikutnya.


5.Langkah-langkah dalam Mencari data Menggunakan Konsep Pencarian Bagi Dua (Binary Search)
	a.Berilah simbol untuk mempermudah dalam memproses data , seperti sekumpulan data dikodekan menjadi n , larik dikodekan L , dan data yang akan dicari dikodekan menjadi X.
	b.Sepakati bahwa nilai index awal atau kita kodekan menjadi a=0 dan index akhir atau kita kodekan menjadi b=n-1.
	c.Tentukan apakah sekumpulan data terurut yang akan dicari bersifat menaik atau menurun dengan cara membandingkan elemen kanan dan kiri
	d.Jika data elemen paling kiri L[0] > data elemen paling kanan L[n-1], maka data terurut tersebut menurun.
	e.Jika data elemen paling kiri L[0] < data elemen paling kanan L[n-1], maka data terurut tersebut menaik.
	f.Selanjutnya kita beri kode untuk index data tengah sebuah array tersebut dengan variabel c , sehingga :
		C = (a+b)div 2
	g.Dari rumus diatas,kita langsung mendapatkan data tengah nya.Lalu periksa apakah L[c] = X , maka data yang dicari langsung didapat dari rumus C diatas.
	h.Tetapi jika L[c] < X maka pencarian data dilakukan dari sisi kanan index c atau data tengah dengan menggunakan rumus C tersebut.Dan jika L[c] >X maka pencarian data dilakukan dari sisi kiri index c atau data tengah dengan menggunakan rumus C dimana dengan nilai b sama dengan nilai c dan pencarian dilakukan sampai seterusnya hingga ketemu nilai X atau tidak sama sekali. 
	
(Note : Konsep ini untuk data terurut menaik. Jika data terurut menurun maka hanya mengubah konsep L[c]<X dari sisi kiri dan L[c]>X dari sisi kanan).

	Sebagai contoh :
	Diberikan sebuah data terurut sebanyak 8 elemen L[8] = {2,3,4,5,6,7,8,9}.Tentukanlah nilai X=3 di elemen tersebut ?
Penyelesaian :
	a.Tentukan apakah data terurut tersebut menaik atau menurun dengan membaca  L[0] dan L[n-1]
		L[0] = 2
		L[7] = 9
    	Karena L[0] < L[7] maka data terurut tersebut menaik.
	b.Misalkan index paling kanan a=0 dan index paling kiri b=7 maka index tengahnya adalah :
		C = (a+b)div 2 = (0+7)div 2 = 3.
		Dari konsep index C didapat elemen tengah adalah 3 dengan L[3] = 5.
	c.Karena data index tengah lebih besar dari nilai yang akan dicari (L[3] >X ) maka pencarian data berikutnya dilakukan pada sisi kiri index C dengan syarat nilai index C sama dengan nilai b, sehingga :
		B = C = 3 , C = (a+b)div 2 = (0+3)div 2 = 1.
		Elemen tengah menjadi 1 dengan L[1] = 3
	d.Karena nilai data di elemen tengah sama dengan niali yang dicari atau X maka pencarian berakhir.Data X ditemukan di index ke-1.

6.Kelebihan dan Kekurangan Binary Search:
	a.Kelebihannya yaitu tidak perlu membandingkan data yang dicari dengan seluruh data array yang ada, cukup melalui titik tengah kemudian kita bisa menentukan ke mana selanjutnya mencari data yang ingin dicari.
	b.Kekurangan implementasi agak sedikit lebih rumit karena tidak bisa digunakan pada data array yang masih acak. Jadi harus melakukan sorting terlebih dahulu dalam implementasinya.
